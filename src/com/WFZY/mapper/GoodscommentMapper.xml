<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.WFZY.mapper.GoodscommentMapper" >
  <resultMap id="BaseResultMap" type="com.WFZY.pojo.Goodscomment" >
    <id column="commentId" property="commentid" jdbcType="INTEGER" />
    <result column="shopId" property="shopid" jdbcType="INTEGER" />
    <result column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="goodsId" property="goodsid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="goodsScore" property="goodsscore" jdbcType="INTEGER" />
    <result column="serviceScore" property="servicescore" jdbcType="INTEGER" />
    <result column="timeScore" property="timescore" jdbcType="INTEGER" />
    <result column="isShow" property="isshow" jdbcType="TINYINT" />
    <result column="dataFlag" property="dataflag" jdbcType="TINYINT" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="replyTime" property="replytime" jdbcType="DATE" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.WFZY.pojo.GoodscommentWithBLOBs" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <result column="shopReply" property="shopreply" jdbcType="LONGVARCHAR" />
    <result column="images" property="images" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    commentId, shopId, orderId, goodsId, userId, goodsScore, serviceScore, timeScore, 
    isShow, dataFlag, createTime, replyTime
  </sql>
  <sql id="Blob_Column_List" >
    content, shopReply, images
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.WFZY.pojo.GoodscommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goodscomment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.WFZY.pojo.GoodscommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goodscomment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goodscomment
    where commentId = #{commentid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goodscomment
    where commentId = #{commentid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.WFZY.pojo.GoodscommentExample" >
    delete from goodscomment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.WFZY.pojo.GoodscommentWithBLOBs" >
    insert into goodscomment (commentId, shopId, orderId, 
      goodsId, userId, goodsScore, 
      serviceScore, timeScore, isShow, 
      dataFlag, createTime, replyTime, 
      content, shopReply, images
      )
    values (#{commentid,jdbcType=INTEGER}, #{shopid,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER}, 
      #{goodsid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{goodsscore,jdbcType=INTEGER}, 
      #{servicescore,jdbcType=INTEGER}, #{timescore,jdbcType=INTEGER}, #{isshow,jdbcType=TINYINT}, 
      #{dataflag,jdbcType=TINYINT}, #{createtime,jdbcType=TIMESTAMP}, #{replytime,jdbcType=DATE}, 
      #{content,jdbcType=LONGVARCHAR}, #{shopreply,jdbcType=LONGVARCHAR}, #{images,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.WFZY.pojo.GoodscommentWithBLOBs" >
    insert into goodscomment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentid != null" >
        commentId,
      </if>
      <if test="shopid != null" >
        shopId,
      </if>
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="goodsid != null" >
        goodsId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="goodsscore != null" >
        goodsScore,
      </if>
      <if test="servicescore != null" >
        serviceScore,
      </if>
      <if test="timescore != null" >
        timeScore,
      </if>
      <if test="isshow != null" >
        isShow,
      </if>
      <if test="dataflag != null" >
        dataFlag,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="replytime != null" >
        replyTime,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="shopreply != null" >
        shopReply,
      </if>
      <if test="images != null" >
        images,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentid != null" >
        #{commentid,jdbcType=INTEGER},
      </if>
      <if test="shopid != null" >
        #{shopid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null" >
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="goodsscore != null" >
        #{goodsscore,jdbcType=INTEGER},
      </if>
      <if test="servicescore != null" >
        #{servicescore,jdbcType=INTEGER},
      </if>
      <if test="timescore != null" >
        #{timescore,jdbcType=INTEGER},
      </if>
      <if test="isshow != null" >
        #{isshow,jdbcType=TINYINT},
      </if>
      <if test="dataflag != null" >
        #{dataflag,jdbcType=TINYINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="replytime != null" >
        #{replytime,jdbcType=DATE},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="shopreply != null" >
        #{shopreply,jdbcType=LONGVARCHAR},
      </if>
      <if test="images != null" >
        #{images,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.WFZY.pojo.GoodscommentExample" resultType="java.lang.Integer" >
    select count(*) from goodscomment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goodscomment
    <set >
      <if test="record.commentid != null" >
        commentId = #{record.commentid,jdbcType=INTEGER},
      </if>
      <if test="record.shopid != null" >
        shopId = #{record.shopid,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null" >
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsid != null" >
        goodsId = #{record.goodsid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsscore != null" >
        goodsScore = #{record.goodsscore,jdbcType=INTEGER},
      </if>
      <if test="record.servicescore != null" >
        serviceScore = #{record.servicescore,jdbcType=INTEGER},
      </if>
      <if test="record.timescore != null" >
        timeScore = #{record.timescore,jdbcType=INTEGER},
      </if>
      <if test="record.isshow != null" >
        isShow = #{record.isshow,jdbcType=TINYINT},
      </if>
      <if test="record.dataflag != null" >
        dataFlag = #{record.dataflag,jdbcType=TINYINT},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.replytime != null" >
        replyTime = #{record.replytime,jdbcType=DATE},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.shopreply != null" >
        shopReply = #{record.shopreply,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.images != null" >
        images = #{record.images,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update goodscomment
    set commentId = #{record.commentid,jdbcType=INTEGER},
      shopId = #{record.shopid,jdbcType=INTEGER},
      orderId = #{record.orderid,jdbcType=INTEGER},
      goodsId = #{record.goodsid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      goodsScore = #{record.goodsscore,jdbcType=INTEGER},
      serviceScore = #{record.servicescore,jdbcType=INTEGER},
      timeScore = #{record.timescore,jdbcType=INTEGER},
      isShow = #{record.isshow,jdbcType=TINYINT},
      dataFlag = #{record.dataflag,jdbcType=TINYINT},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      replyTime = #{record.replytime,jdbcType=DATE},
      content = #{record.content,jdbcType=LONGVARCHAR},
      shopReply = #{record.shopreply,jdbcType=LONGVARCHAR},
      images = #{record.images,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goodscomment
    set commentId = #{record.commentid,jdbcType=INTEGER},
      shopId = #{record.shopid,jdbcType=INTEGER},
      orderId = #{record.orderid,jdbcType=INTEGER},
      goodsId = #{record.goodsid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      goodsScore = #{record.goodsscore,jdbcType=INTEGER},
      serviceScore = #{record.servicescore,jdbcType=INTEGER},
      timeScore = #{record.timescore,jdbcType=INTEGER},
      isShow = #{record.isshow,jdbcType=TINYINT},
      dataFlag = #{record.dataflag,jdbcType=TINYINT},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      replyTime = #{record.replytime,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.WFZY.pojo.GoodscommentWithBLOBs" >
    update goodscomment
    <set >
      <if test="shopid != null" >
        shopId = #{shopid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        orderId = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null" >
        goodsId = #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="goodsscore != null" >
        goodsScore = #{goodsscore,jdbcType=INTEGER},
      </if>
      <if test="servicescore != null" >
        serviceScore = #{servicescore,jdbcType=INTEGER},
      </if>
      <if test="timescore != null" >
        timeScore = #{timescore,jdbcType=INTEGER},
      </if>
      <if test="isshow != null" >
        isShow = #{isshow,jdbcType=TINYINT},
      </if>
      <if test="dataflag != null" >
        dataFlag = #{dataflag,jdbcType=TINYINT},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="replytime != null" >
        replyTime = #{replytime,jdbcType=DATE},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="shopreply != null" >
        shopReply = #{shopreply,jdbcType=LONGVARCHAR},
      </if>
      <if test="images != null" >
        images = #{images,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where commentId = #{commentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.WFZY.pojo.GoodscommentWithBLOBs" >
    update goodscomment
    set shopId = #{shopid,jdbcType=INTEGER},
      orderId = #{orderid,jdbcType=INTEGER},
      goodsId = #{goodsid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      goodsScore = #{goodsscore,jdbcType=INTEGER},
      serviceScore = #{servicescore,jdbcType=INTEGER},
      timeScore = #{timescore,jdbcType=INTEGER},
      isShow = #{isshow,jdbcType=TINYINT},
      dataFlag = #{dataflag,jdbcType=TINYINT},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      replyTime = #{replytime,jdbcType=DATE},
      content = #{content,jdbcType=LONGVARCHAR},
      shopReply = #{shopreply,jdbcType=LONGVARCHAR},
      images = #{images,jdbcType=LONGVARCHAR}
    where commentId = #{commentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.WFZY.pojo.Goodscomment" >
    update goodscomment
    set shopId = #{shopid,jdbcType=INTEGER},
      orderId = #{orderid,jdbcType=INTEGER},
      goodsId = #{goodsid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      goodsScore = #{goodsscore,jdbcType=INTEGER},
      serviceScore = #{servicescore,jdbcType=INTEGER},
      timeScore = #{timescore,jdbcType=INTEGER},
      isShow = #{isshow,jdbcType=TINYINT},
      dataFlag = #{dataflag,jdbcType=TINYINT},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      replyTime = #{replytime,jdbcType=DATE}
    where commentId = #{commentid,jdbcType=INTEGER}
  </update>
</mapper>