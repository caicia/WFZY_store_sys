<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.WFZY.mapper.OrderrefundsMapper" >
  <resultMap id="BaseResultMap" type="com.WFZY.pojo.Orderrefunds" >
    <id column="orderRefundsId" property="orderrefundsid" jdbcType="INTEGER" />
    <result column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="shopId" property="shopid" jdbcType="INTEGER" />
    <result column="refundOtherReson" property="refundotherreson" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="backMoney" property="backmoney" jdbcType="DECIMAL" />
    <result column="refundRemark" property="refundremark" jdbcType="VARCHAR" />
    <result column="refundTime" property="refundtime" jdbcType="TIMESTAMP" />
    <result column="shopRejectReason" property="shoprejectreason" jdbcType="VARCHAR" />
    <result column="refundStatus" property="refundstatus" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    orderRefundsId, orderId, userId, shopId, refundOtherReson, createTime, backMoney, 
    refundRemark, refundTime, shopRejectReason, refundStatus
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.WFZY.pojo.OrderrefundsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orderrefunds
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orderrefunds
    where orderRefundsId = #{orderrefundsid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orderrefunds
    where orderRefundsId = #{orderrefundsid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.WFZY.pojo.OrderrefundsExample" >
    delete from orderrefunds
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.WFZY.pojo.Orderrefunds" >
    insert into orderrefunds (orderRefundsId, orderId, userId, 
      shopId, refundOtherReson, createTime, 
      backMoney, refundRemark, refundTime, 
      shopRejectReason, refundStatus)
    values (#{orderrefundsid,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{shopid,jdbcType=INTEGER}, #{refundotherreson,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{backmoney,jdbcType=DECIMAL}, #{refundremark,jdbcType=VARCHAR}, #{refundtime,jdbcType=TIMESTAMP}, 
      #{shoprejectreason,jdbcType=VARCHAR}, #{refundstatus,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.WFZY.pojo.Orderrefunds" >
    insert into orderrefunds
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderrefundsid != null" >
        orderRefundsId,
      </if>
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="shopid != null" >
        shopId,
      </if>
      <if test="refundotherreson != null" >
        refundOtherReson,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="backmoney != null" >
        backMoney,
      </if>
      <if test="refundremark != null" >
        refundRemark,
      </if>
      <if test="refundtime != null" >
        refundTime,
      </if>
      <if test="shoprejectreason != null" >
        shopRejectReason,
      </if>
      <if test="refundstatus != null" >
        refundStatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderrefundsid != null" >
        #{orderrefundsid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="shopid != null" >
        #{shopid,jdbcType=INTEGER},
      </if>
      <if test="refundotherreson != null" >
        #{refundotherreson,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="backmoney != null" >
        #{backmoney,jdbcType=DECIMAL},
      </if>
      <if test="refundremark != null" >
        #{refundremark,jdbcType=VARCHAR},
      </if>
      <if test="refundtime != null" >
        #{refundtime,jdbcType=TIMESTAMP},
      </if>
      <if test="shoprejectreason != null" >
        #{shoprejectreason,jdbcType=VARCHAR},
      </if>
      <if test="refundstatus != null" >
        #{refundstatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.WFZY.pojo.OrderrefundsExample" resultType="java.lang.Integer" >
    select count(*) from orderrefunds
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orderrefunds
    <set >
      <if test="record.orderrefundsid != null" >
        orderRefundsId = #{record.orderrefundsid,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null" >
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.shopid != null" >
        shopId = #{record.shopid,jdbcType=INTEGER},
      </if>
      <if test="record.refundotherreson != null" >
        refundOtherReson = #{record.refundotherreson,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.backmoney != null" >
        backMoney = #{record.backmoney,jdbcType=DECIMAL},
      </if>
      <if test="record.refundremark != null" >
        refundRemark = #{record.refundremark,jdbcType=VARCHAR},
      </if>
      <if test="record.refundtime != null" >
        refundTime = #{record.refundtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shoprejectreason != null" >
        shopRejectReason = #{record.shoprejectreason,jdbcType=VARCHAR},
      </if>
      <if test="record.refundstatus != null" >
        refundStatus = #{record.refundstatus,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orderrefunds
    set orderRefundsId = #{record.orderrefundsid,jdbcType=INTEGER},
      orderId = #{record.orderid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      shopId = #{record.shopid,jdbcType=INTEGER},
      refundOtherReson = #{record.refundotherreson,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      backMoney = #{record.backmoney,jdbcType=DECIMAL},
      refundRemark = #{record.refundremark,jdbcType=VARCHAR},
      refundTime = #{record.refundtime,jdbcType=TIMESTAMP},
      shopRejectReason = #{record.shoprejectreason,jdbcType=VARCHAR},
      refundStatus = #{record.refundstatus,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.WFZY.pojo.Orderrefunds" >
    update orderrefunds
    <set >
      <if test="orderid != null" >
        orderId = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="shopid != null" >
        shopId = #{shopid,jdbcType=INTEGER},
      </if>
      <if test="refundotherreson != null" >
        refundOtherReson = #{refundotherreson,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="backmoney != null" >
        backMoney = #{backmoney,jdbcType=DECIMAL},
      </if>
      <if test="refundremark != null" >
        refundRemark = #{refundremark,jdbcType=VARCHAR},
      </if>
      <if test="refundtime != null" >
        refundTime = #{refundtime,jdbcType=TIMESTAMP},
      </if>
      <if test="shoprejectreason != null" >
        shopRejectReason = #{shoprejectreason,jdbcType=VARCHAR},
      </if>
      <if test="refundstatus != null" >
        refundStatus = #{refundstatus,jdbcType=TINYINT},
      </if>
    </set>
    where orderRefundsId = #{orderrefundsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.WFZY.pojo.Orderrefunds" >
    update orderrefunds
    set orderId = #{orderid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      shopId = #{shopid,jdbcType=INTEGER},
      refundOtherReson = #{refundotherreson,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      backMoney = #{backmoney,jdbcType=DECIMAL},
      refundRemark = #{refundremark,jdbcType=VARCHAR},
      refundTime = #{refundtime,jdbcType=TIMESTAMP},
      shopRejectReason = #{shoprejectreason,jdbcType=VARCHAR},
      refundStatus = #{refundstatus,jdbcType=TINYINT}
    where orderRefundsId = #{orderrefundsid,jdbcType=INTEGER}
  </update>
</mapper>